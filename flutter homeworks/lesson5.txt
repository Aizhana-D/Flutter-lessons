//--Arithmetic Operators--//
 +,-,/,*


//--Assignment Operators--//
= (Оператор присваивания)
+ = (Добавить и назначить) - a + = b → a = a + b
- = (Вычесть и присвоить) - a- = b → a = ab 
* = (Умножить и присвоить)- a * = b → a= a * b → 200
/ = (Разделить и присвоить)- a% = b → a = a% b → 2,0

//--Relational Operators--//
Сравнение двух выражений возвращает логическое значение true и false

> (больше чем),<(меньше чем),> = (больше или равно),<= (меньше или равно),== (равно),!=(Не равно)

var a = 30 ;
var b = 20 ;
var res = a> b;

print (res);


//--Type test Operators--//
void main() {
var num = 10;
var name = "JavaTpoint";
print(num is int);
print(name is! String );
}

as (в качестве)
is (является)
is! (не является)

//--Logical Operators--//
Логические операторы используются для оценки выражений и принятия решения

&& (логическое И) Он возвращается, если все выражения верны
|| (Логическое ИЛИ) Он возвращает ИСТИНА, если какое- либо выражение истинно
! (Логическое НЕ) Возвращает дополнение выражения

void main(){
bool a = true, b = false;
var c = a && b;
print(c);
var c = b || a;
print(c);
var c = !(a || b);
print(c);
}

//--Conditional Operators--//

оператора if-else
Синтаксис 1 -
условие ? ехр1: ехр2
Если данное условие ИСТИНА, то возвращается exp1, иначе exp2


Dart Numbers Type
Числовые методы

compareTo() - Он сравнивает значение с другим числом
toInt() - Возвращает целочисленное эквивалентное представление числа
toDouble() - Это дает двойное эквивалентное представление числа
round() - Возвращает округление числа
num.parse() - преобразование числовые строки в числа


Dart String Type
isEmpty – Если строка пуста, возвращается истина
Length - Он возвращает длину строки, включая пробелы
